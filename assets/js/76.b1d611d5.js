(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{537:function(a,e,t){"use strict";t.r(e);var s=t(42),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("前面文章我们介绍了列表与集合中的基本命令，本文我们来看看Redis中的散列与有序集合。")]),a._v(" "),t("p",[a._v("本文是 Redis 系列的第六篇文章，了解前面的文章有助于更好的理解本文：")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("1."),t("a",{attrs:{href:"https://mp.weixin.qq.com/s/NCm3zNGIDVMnlykeOiaH7Q",target:"_blank",rel:"noopener noreferrer"}},[a._v("Linux 上安装 Redis"),t("OutboundLink")],1),t("br"),a._v("\n2."),t("a",{attrs:{href:"http://mp.weixin.qq.com/s/jNSN8YO4jZbyjKR5C4in_w",target:"_blank",rel:"noopener noreferrer"}},[a._v("Redis 中的五种数据类型简介"),t("OutboundLink")],1),t("br"),a._v("\n3."),t("a",{attrs:{href:"https://mp.weixin.qq.com/s/Svvgwo_a92vNdCSazbzKRQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("Redis 字符串 (STRING) 介绍"),t("OutboundLink")],1),t("br"),a._v("\n4."),t("a",{attrs:{href:"http://mp.weixin.qq.com/s/OGUnTBmdErvZ8r_yoyg_rQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("Redis 字符串 (STRING) 中 BIT 相关命令"),t("OutboundLink")],1),t("br"),a._v("\n5."),t("a",{attrs:{href:"https://mp.weixin.qq.com/s/C07AJhRk8AvPeKxSUq8lGA",target:"_blank",rel:"noopener noreferrer"}},[a._v("Redis 列表与集合"),t("OutboundLink")],1)]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"散列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#散列"}},[a._v("#")]),a._v(" 散列")]),a._v(" "),t("p",[a._v("很多时候，散列就像一个微缩版的 redis ，在本文中，小伙伴们对看到的许多散列命令都会有似曾相识的感觉。")]),a._v(" "),t("h3",{attrs:{id:"hset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hset"}},[a._v("#")]),a._v(" HSET")]),a._v(" "),t("p",[a._v("HSET 命令可以用来设置 key 指定的哈希集中指定字段的值，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> HSET k1 h1 v1\n(integer) 1\n")])])]),t("h3",{attrs:{id:"hget"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hget"}},[a._v("#")]),a._v(" HGET")]),a._v(" "),t("p",[a._v("HGET 命令可以用来返回 key 指定的哈希集中该字段所关联的值，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> HGET k1 h1\n"v1"\n')])])]),t("h3",{attrs:{id:"hmset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmset"}},[a._v("#")]),a._v(" HMSET")]),a._v(" "),t("p",[a._v("HMSET 命令可以批量设置 key 指定的哈希集中指定字段的值，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> HMSET k2 h1 v1 h2 v2 h3 v3\nOK\n")])])]),t("h3",{attrs:{id:"hmget"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmget"}},[a._v("#")]),a._v(" HMGET")]),a._v(" "),t("p",[a._v("HMGET 可以批量返回 key 指定的哈希集中指定字段的值，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> HMGET k2 h1 h2 h3\n1) "v1"\n2) "v2"\n3) "v3"\n')])])]),t("h3",{attrs:{id:"hdel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hdel"}},[a._v("#")]),a._v(" HDEL")]),a._v(" "),t("p",[a._v("HDEL 命令可以从 key 指定的哈希集中移除指定的域，在哈希集中不存在的域将被忽略，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> HMGET k2 h1 h2 h3\n1) "v1"\n2) "v2"\n3) "v3"\n127.0.0.1:6379> HDEL k2 h1\n(integer) 1\n127.0.0.1:6379> HMGET k2 h1 h2 h3\n1) (nil)\n2) "v2"\n3) "v3"\n')])])]),t("h3",{attrs:{id:"hsetnx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hsetnx"}},[a._v("#")]),a._v(" HSETNX")]),a._v(" "),t("p",[a._v("HSETNX 命令只在 key 指定的哈希集中不存在指定的字段时，设置字段的值，如果字段已存在，该操作无效果。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> HSETNX k2 h3 1\n(integer) 0\n127.0.0.1:6379> HSETNX k2 h4 1\n(integer) 1\n")])])]),t("h3",{attrs:{id:"hvals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hvals"}},[a._v("#")]),a._v(" HVALS")]),a._v(" "),t("p",[a._v("HVALS 命令可以返回 key 指定的哈希集中所有字段的值，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> HVALS k2\n1) "v2"\n2) "v3"\n3) "1"\n')])])]),t("h3",{attrs:{id:"hkeys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hkeys"}},[a._v("#")]),a._v(" HKEYS")]),a._v(" "),t("p",[a._v("HKEYS 命令可以返回 key 指定的哈希集中所有字段的名字，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> HKEYS k2\n1) "h2"\n2) "h3"\n3) "h4"\n')])])]),t("h3",{attrs:{id:"hgetall"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hgetall"}},[a._v("#")]),a._v(" HGETALL")]),a._v(" "),t("p",[a._v("HGETALL 命令可以返回 key 指定的哈希集中所有的字段和值。返回值中，每个字段名的下一个是它的值，所以返回值的长度是哈希集大小的两倍，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> HGETALL k2\n1) "h2"\n2) "v2"\n3) "h3"\n4) "v3"\n5) "h4"\n6) "1"\n')])])]),t("h3",{attrs:{id:"hexists"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hexists"}},[a._v("#")]),a._v(" HEXISTS")]),a._v(" "),t("p",[a._v("HEXISTS 命令可以返回 hash 里面 field 是否存在，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> HEXISTS k2 h3\n(integer) 1\n")])])]),t("h3",{attrs:{id:"hincrby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hincrby"}},[a._v("#")]),a._v(" HINCRBY")]),a._v(" "),t("p",[a._v("HINCRBY 可以增加 key 指定的哈希集中指定字段的数值。如果 key 不存在，会创建一个新的哈希集并与 key 关联。如果字段不存在，则字段的值在该操作执行前被设置为 0， HINCRBY 支持的值的范围限定在 64 位有符号整数，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> HEXISTS k2 h3\n(integer) 1\n127.0.0.1:6379>\n127.0.0.1:6379> HGET k2 h4\n"1"\n127.0.0.1:6379> HINCRBY k2 h4 5\n(integer) 6\n127.0.0.1:6379> HGET k2 h4\n"6"\n127.0.0.1:6379> HGET k2 h5\n(nil)\n127.0.0.1:6379> HINCRBY k2 h5 99\n(integer) 99\n127.0.0.1:6379> HGET k2 h5\n"99"\n')])])]),t("h3",{attrs:{id:"hincrbyfloat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hincrbyfloat"}},[a._v("#")]),a._v(" HINCRBYFLOAT")]),a._v(" "),t("p",[a._v("HINCRBYFLOAT 与 HINCRBY 用法基本一致，只不过这里允许 float 类型的数据，不赘述。")]),a._v(" "),t("h3",{attrs:{id:"hlen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hlen"}},[a._v("#")]),a._v(" HLEN")]),a._v(" "),t("p",[a._v("HLEN 返回 key 指定的哈希集包含的字段的数量，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> HLEN k2\n(integer) 4\n")])])]),t("h3",{attrs:{id:"hstrlen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hstrlen"}},[a._v("#")]),a._v(" HSTRLEN")]),a._v(" "),t("p",[a._v("HSTRLEN 可以返回 hash 指定 field 的 value 的字符串长度，如果 hash 或者 field 不存在，返回 0 ，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> HSTRLEN k2 h2\n(integer) 2\n")])])]),t("h2",{attrs:{id:"有序集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有序集合"}},[a._v("#")]),a._v(" 有序集合")]),a._v(" "),t("p",[a._v("有序集合类似 Sets ,但是每个字符串元素都关联到一个叫 score 浮动数值。里面的元素总是通过 score 进行着排序，因此它是可以检索的一系列元素。")]),a._v(" "),t("h3",{attrs:{id:"zadd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zadd"}},[a._v("#")]),a._v(" ZADD")]),a._v(" "),t("p",[a._v("ZADD 命令可以将所有指定成员添加到键为 key 的有序集合里面。添加时可以指定多个分数/成员（score/member）对。 如果指定添加的成员已经是有序集合里面的成员，则会更新该成员的分数（scrore）并更新到正确的排序位置。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> ZADD k1 60 v1\n(integer) 1\n")])])]),t("h3",{attrs:{id:"zscore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zscore"}},[a._v("#")]),a._v(" ZSCORE")]),a._v(" "),t("p",[a._v("ZSCORE 命令可以返回有序集 key 中，成员 member 的score 值。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> ZSCORE k1 v1\n"60"\n')])])]),t("h3",{attrs:{id:"zrange"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zrange"}},[a._v("#")]),a._v(" ZRANGE")]),a._v(" "),t("p",[a._v("ZRANGE 命令可以根据 index 返回 member ，该命令在执行时加上 withscores 参数可以连同 score 一起返回：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> ZRANGE k1 0 3\n1) "v1"\n2) "v2"\n3) "v3"\n4) "v4"\n127.0.0.1:6379> ZRANGE k1 0 3 withscores\n1) "v1"\n2) "60"\n3) "v2"\n4) "70"\n5) "v3"\n6) "80"\n7) "v4"\n8) "90"\n')])])]),t("h3",{attrs:{id:"zrevrange"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zrevrange"}},[a._v("#")]),a._v(" ZREVRANGE")]),a._v(" "),t("p",[a._v("ZREVRANGE 和 ZRANGE 功能基本一致，不同的是 ZREVRANGE 是反着来的，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> ZREVRANGE k1 0 3\n1) "v5"\n2) "v4"\n3) "v3"\n4) "v2"\n127.0.0.1:6379> ZREVRANGE k1 0 3 withscores\n1) "v5"\n2) "100"\n3) "v4"\n4) "90"\n5) "v3"\n6) "80"\n7) "v2"\n8) "70"\n')])])]),t("h3",{attrs:{id:"zcard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zcard"}},[a._v("#")]),a._v(" ZCARD")]),a._v(" "),t("p",[a._v("ZCARD 命令可以返回 key 的有序集元素个数。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> ZCARD k1\n(integer) 5\n")])])]),t("h3",{attrs:{id:"zcount"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zcount"}},[a._v("#")]),a._v(" ZCOUNT")]),a._v(" "),t("p",[a._v("ZCOUNT 命令可以返回有序集 key 中，score 值在 min 和 max 之间(默认包括 score 值等于 min 或 max )的成员。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> ZCOUNT k1 60 90\n(integer) 4\n")])])]),t("p",[a._v("如果在统计时，不需要包含 60 或者 90 ，则添加一个 "),t("strong",[a._v("(")]),a._v(" 即可，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> ZCOUNT k1 60 (90\n(integer) 3\n")])])]),t("h3",{attrs:{id:"zrangebyscore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zrangebyscore"}},[a._v("#")]),a._v(" ZRANGEBYSCORE")]),a._v(" "),t("p",[a._v("ZRANGEBYSCORE 命令可以按照 score 范围范围元素，加上 withscores 可以连 score 一起返回。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> ZRANGEBYSCORE k1 60 80\n1) "v1"\n2) "v2"\n3) "v3"\n127.0.0.1:6379> ZRANGEBYSCORE k1 60 80 withscores\n1) "v1"\n2) "60"\n3) "v2"\n4) "70"\n5) "v3"\n6) "80"\n127.0.0.1:6379> ZRANGEBYSCORE k1 (60 80 withscores\n1) "v2"\n2) "70"\n3) "v3"\n4) "80"\n')])])]),t("h3",{attrs:{id:"zrank"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zrank"}},[a._v("#")]),a._v(" ZRANK")]),a._v(" "),t("p",[a._v("ZRANK 命令可以返回有序集 key 中成员 member 的排名。其中有序集成员按 score 值递增(从小到大)顺序排列。排名以 0 为底，即 score 值最小的成员排名为 0 。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> ZRANK k1 v1\n(integer) 0\n127.0.0.1:6379> ZRANK k1 v2\n(integer) 1\n")])])]),t("h3",{attrs:{id:"zrevrank"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zrevrank"}},[a._v("#")]),a._v(" ZREVRANK")]),a._v(" "),t("p",[a._v("ZREVRANK 和 ZRANK 命令功能基本一致，不同的是，ZREVRANK 中的排序是从大到小：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> ZREVRANK k1 v1\n(integer) 4\n127.0.0.1:6379> ZREVRANK k1 v2\n(integer) 3\n")])])]),t("h3",{attrs:{id:"zincrby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zincrby"}},[a._v("#")]),a._v(" ZINCRBY")]),a._v(" "),t("p",[a._v("ZINCRBY 命令可以为有序集 key 的成员 member 的 score 值加上增量 increment 。如果 key 中不存在 member ，就在 key 中添加一个 member ，score 是 increment（就好像它之前的 score 是0.0）。如果 key 不存在，就创建一个只含有指定 member 成员的有序集合：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> ZINCRBY k1 3 v1\n"63"\n127.0.0.1:6379> ZRANGE k1 0 0 withscores\n1) "v1"\n2) "63"\n')])])]),t("h3",{attrs:{id:"zinterstore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zinterstore"}},[a._v("#")]),a._v(" ZINTERSTORE")]),a._v(" "),t("p",[a._v("ZINTERSTORE 命令可以计算给定的 numkeys 个有序集合的交集，并且把结果放到 destination 中。 在给定要计算的 key 和其它参数之前，必须先给定 key 个数( numberkeys )。该命令也可以在执行的过程中给原 score 乘以 weights 后再求和，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> ZADD k2 2 v1\n(integer) 1\n127.0.0.1:6379> ZADD k2 3 v2\n(integer) 1\n127.0.0.1:6379> ZADD k2 4 v3\n(integer) 1\n127.0.0.1:6379> ZADD k3 9 v2\n(integer) 1\n127.0.0.1:6379> ZADD k3 10 v3\n(integer) 1\n127.0.0.1:6379> ZADD k3 11 v4\n(integer) 1\n127.0.0.1:6379> ZINTERSTORE k4 2 k2 k3\n(integer) 2\n127.0.0.1:6379> ZRANGE k4 0 -1 withscores\n1) "v2"\n2) "12"\n3) "v3"\n4) "14"\n127.0.0.1:6379> ZINTERSTORE k5 2 k2 k3 weights 3 1\n(integer) 2\n127.0.0.1:6379> ZRANGE k5 0 -1 withscores\n1) "v2"\n2) "18"\n3) "v3"\n4) "22"\n')])])]),t("h3",{attrs:{id:"zrem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zrem"}},[a._v("#")]),a._v(" ZREM")]),a._v(" "),t("p",[a._v("ZREM 命令可以从集合中弹出一个元素，如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> ZRANGE k2 0 -1 withscores\n1) "v1"\n2) "2"\n3) "v2"\n4) "3"\n5) "v3"\n6) "4"\n127.0.0.1:6379> ZREM k2 v1\n(integer) 1\n127.0.0.1:6379> ZRANGE k2 0 -1 withscores\n1) "v2"\n2) "3"\n3) "v3"\n4) "4"\n')])])]),t("h3",{attrs:{id:"zlexcount"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zlexcount"}},[a._v("#")]),a._v(" ZLEXCOUNT")]),a._v(" "),t("p",[a._v("ZLEXCOUNT 命令用于计算有序集合中指定成员之间的成员数量。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> ZLEXCOUNT k2 - +\n(integer) 2\n127.0.0.1:6379> ZLEXCOUNT k2 [v2 [v4\n(integer) 2\n")])])]),t("p",[a._v("**注意：**可以用 "),t("strong",[a._v("-")]),a._v(" 和 "),t("strong",[a._v("+")]),a._v(" 表示得分最小值和最大值，如果使用成员名的话，一定要在成员名之前加上 [ 。")]),a._v(" "),t("h3",{attrs:{id:"zrangebylex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zrangebylex"}},[a._v("#")]),a._v(" ZRANGEBYLEX")]),a._v(" "),t("p",[a._v("ZRANGEBYLEX 返回指定成员区间内的成员，按成员字典正序排序, 分数必须相同。如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('127.0.0.1:6379> ZRANGEBYLEX k2 [v2 [v4\n1) "v2"\n2) "v3"\n127.0.0.1:6379> ZRANGEBYLEX k2 - +\n1) "v2"\n2) "v3"\n127.0.0.1:6379>\n')])])]),t("p",[a._v("注意 min 和 max 参数的写法和 ZLEXCOUNT 一致。")]),a._v(" "),t("p",[a._v("OK,散列和有序集合的命令我们就介绍这么多，更多命令小伙伴们可以参考"),t("a",{attrs:{href:"http://www.redis.cn/commands.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方文档"),t("OutboundLink")],1),a._v("。小伙伴在看官方文档时，有什么问题欢迎留言讨论。")])])}),[],!1,null,null,null);e.default=r.exports}}]);