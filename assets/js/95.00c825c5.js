(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{444:function(t,a,s){"use strict";s.r(a);var n=s(42),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("不知道各位小伙伴在生产环境都是怎么部署 Spring Boot 的，打成 jar 直接一键运行？打成 war 扔到 Tomcat 容器中运行？不过据松哥了解，容器化部署应该是目前的主流方案。")]),t._v(" "),s("p",[t._v("不同于传统的单体应用，微服务由于服务数量众多，在部署的时候出问题的可能性更大，这个时候，结合 Docker 来部署，就可以很好的解决这个问题，这也是目前使用较多的方案之一。")]),t._v(" "),s("p",[t._v("将 Spring Boot 项目打包到 Docker 容器中部署，有很多不同的方法，今天松哥主要来和大家聊一聊如何将 Spring Boot 项目一键打包到远程 Docker 容器，然后通过运行一个镜像的方式来启动一个 Spring Boot 项目。")]),t._v(" "),s("p",[t._v("至于其他的 Spring Boot 结合 Docker 的用法，大家不要着急，后续的文章，松哥会和大家慢慢的一一道来。")]),t._v(" "),s("h2",{attrs:{id:"_1-准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备工作"}},[t._v("#")]),t._v(" 1.准备工作")]),t._v(" "),s("h3",{attrs:{id:"_1-1-准备-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-准备-docker"}},[t._v("#")]),t._v(" 1.1 准备 Docker")]),t._v(" "),s("p",[t._v("我这里以 CentOS7 为例来给大家演示。")]),t._v(" "),s("p",[t._v("首先需要在 CentOS7 上安装好 Docker，这个安装方式网上很多，我就不多说了，我自己去年写过一个 Docker 入门教程，大家可以在公众号后台回复 "),s("code",[t._v("Docker")]),t._v(" 获取教程下载地址。")]),t._v(" "),s("p",[t._v("Docker 安装成功之后，我们首先需要修改 Docker 配置，开启允许远程访问 Docker 的功能，开启方式很简单，修改 "),s("code",[t._v("/usr/lib/systemd/system/docker.service")]),t._v(" 文件，加入如下内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-H tcp://0.0.0.0:2375  -H unix:///var/run/docker.sock\n")])])]),s("p",[t._v("如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-1.png",alt:""}})]),t._v(" "),s("p",[t._v("配置完成后，保存退出，然后重启 Docker：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl daemon-reload    \nservice docker restart \n")])])]),s("p",[t._v("Docker 重启成功之后，Docker 的准备工作就算是 OK 了。")]),t._v(" "),s("h3",{attrs:{id:"_1-2-准备-idea"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-准备-idea"}},[t._v("#")]),t._v(" 1.2 准备 IDEA")]),t._v(" "),s("p",[t._v("IDEA 上的准备工作，主要是安装一个 Docker 插件，点击 "),s("code",[t._v("File->Settings->Plugins->Browse Repositories")]),t._v(" 如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-2.png",alt:""}})]),t._v(" "),s("p",[t._v("点击右边绿色的 Install 按钮，完成安装，安装完成之后需要重启一下 IDEA。")]),t._v(" "),s("p",[t._v("IDEA 重启成功之后，我们依次打开 "),s("code",[t._v("File->Settings->Build,Execution,Deployment->Docker")]),t._v(" ，然后配置一下 Docker 的远程连接地址：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-3.png",alt:""}})]),t._v(" "),s("p",[t._v("配置一下 Docker 的地址，配置完成后，可以看到下面有一个 Connection successful 提示，这个表示 Docker 已经连接上了。")]),t._v(" "),s("p",[t._v("如此之后，我们的准备工作就算是 OK 了。")]),t._v(" "),s("h2",{attrs:{id:"_2-准备项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-准备项目"}},[t._v("#")]),t._v(" 2.准备项目")]),t._v(" "),s("p",[t._v("接下来我们来创建一个简单的 Spring Boot 项目（只需要引入 "),s("code",[t._v("spring-boot-starter-web")]),t._v(" 依赖即可），项目创建成功之后，我们再创建一个普通的 "),s("code",[t._v("HelloDockerController")]),t._v("，用来做测试，如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloDockerController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello docker!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这是一个很简单的接口，无需多说。")]),t._v(" "),s("h2",{attrs:{id:"_3-配置-dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置-dockerfile"}},[t._v("#")]),t._v(" 3.配置 Dockerfile")]),t._v(" "),s("p",[t._v("接下来，在项目的根目录下，我创建一个 Dockerfile ，作为我镜像的构建文件，具体位置如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-4.png",alt:""}})]),t._v(" "),s("p",[t._v("文件内容如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("FROM hub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("163.")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("library"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("latest\nVOLUME "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tmp\nADD target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("docker"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("SNAPSHOT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar\nENTRYPOINT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-jar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app.jar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("这里只有简单的四行，我说一下：")]),t._v(" "),s("ol",[s("li",[t._v("Spring Boot 项目的运行依赖 Java 环境，所以我自己的镜像基于 Java 镜像来构建。")]),t._v(" "),s("li",[t._v("考虑到 Docker 官方镜像下载较慢，我这里使用了网易提供的 Docker 镜像。")]),t._v(" "),s("li",[t._v("由于 Spring Boot 运行时需要 tmp 目录，这里数据卷配置一个 /tmp 目录出来。")]),t._v(" "),s("li",[t._v("将本地 target 目录中打包好的 .jar 文件复制一份新的 到 /app.jar。")]),t._v(" "),s("li",[t._v("最后就是配置一下启动命令，由于我打包的 jar 已经成为 app.jar 了，所以启动命令也是启动 app.jar。")])]),t._v(" "),s("p",[t._v("这是我们配置的一个简单的 Dockerfile。")]),t._v(" "),s("h2",{attrs:{id:"_4-配置-maven-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置-maven-插件"}},[t._v("#")]),t._v(" 4.配置 Maven 插件")]),t._v(" "),s("p",[t._v("接下来在 pom.xml 文件中，添加如下插件：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.spotify"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("docker-maven-plugin"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.2.0"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("executions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("execution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("build-image"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("phase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("package"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("phase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("goals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("goal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("build"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("goal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("goals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("execution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("executions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("configuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dockerHost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("http://192.168.66.131:2375"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dockerHost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("imageName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("javaboy/${project.artifactId}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("imageName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("imageTags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("imageTag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${project.version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("imageTag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("imageTags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("forceTags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("forceTags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dockerDirectory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${project.basedir}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dockerDirectory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("targetPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("targetPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("directory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${project.build.directory}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("directory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("include")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${project.build.finalName}.jar"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("include")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("configuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("这个插件的配置不难理解：")]),t._v(" "),s("ol",[s("li",[t._v("首先在 execution 节点中配置当执行 mvn package 的时候，顺便也执行一下 docker:build")]),t._v(" "),s("li",[t._v("然后在 configuration 中分别配置 Docker 的主机地址，镜像的名称，镜像的 tags，其中 dockerDirectory 表示指定 Dockerfile 的位置。")]),t._v(" "),s("li",[t._v("最后 resource 节点中再配置一下 jar 的位置和名称即可。")])]),t._v(" "),s("p",[t._v("OK，做完这些我们就算大功告成了。")]),t._v(" "),s("h2",{attrs:{id:"_5-打包运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-打包运行"}},[t._v("#")]),t._v(" 5.打包运行")]),t._v(" "),s("p",[t._v("接下来对项目进行打包，打包完成后，项目会自动构建成一个镜像，并且上传到 Docker 容器中，打包方式如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-5.png",alt:""}})]),t._v(" "),s("p",[t._v("打包过程会稍微有一点旧，因为还包含了镜像的构建，特别是第一次打包，需要下载基础镜像，会更慢一些。")]),t._v(" "),s("p",[t._v("部分打包日志如下（项目构建过程）:")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-6.png",alt:""}})]),t._v(" "),s("p",[t._v("项目打包成功之后，我们就可以在 Docker 容器中看到我们刚刚打包成的镜像了，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-7.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_5-1-运行方式一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-运行方式一"}},[t._v("#")]),t._v(" 5.1 运行方式一")]),t._v(" "),s("p",[t._v("此时，我们可以直接在 Linux 上像创建普通容器一样创建这个镜像的容器，然后启动，执行如下命令即可：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -d --name javaboy -p 8080:8080 javaboy/docker:0.0.1\n")])])]),s("p",[t._v("启动成功之后，我们就可以访问容器中的接口了。")]),t._v(" "),s("p",[t._v("但是这种操作显然还是有点麻烦，结合我们一开始安装的 Docker 插件，这个运行步骤还可以做进一步的简化。")]),t._v(" "),s("h3",{attrs:{id:"_5-2-运行方式二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-运行方式二"}},[t._v("#")]),t._v(" 5.2 运行方式二")]),t._v(" "),s("p",[t._v("大家注意，此时我们的 IDEA 中多了一个选项，就是 docker，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-8.png",alt:""}})]),t._v(" "),s("p",[t._v("点击左边的绿色启动按钮，连接上 Docker 容器，连接成功之后，我们就可以看到目前 Docker 中的所有容器和镜像了，当然也包括我们刚刚创建的 Docker 镜像，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-9.png",alt:""}})]),t._v(" "),s("p",[t._v("此时，我们选中这个镜像，右键单击，即可基于此镜像创建出一个容器，如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-10.png",alt:""}})]),t._v(" "),s("p",[t._v("我们选择 Create container，然后填入容器的一些必要信息，配置一下容器名称，镜像 ID 会自动填上，暴露的端口使用 Specify 即可，然后写上端口的映射关系：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-11.png",alt:""}})]),t._v(" "),s("p",[t._v("配置完成后，点击下方的 "),s("code",[t._v("run")]),t._v(" 按钮，就可以开始运行了。运行日志如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-12.png",alt:""}})]),t._v(" "),s("p",[t._v("注意，这个日志是在 Docker 的那个窗口里打印出来的。")]),t._v(" "),s("p",[t._v("项目运行成功之后，在浏览器输入远程服务器的地址，就可以访问了：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/41-13.png",alt:""}})]),t._v(" "),s("p",[t._v("如此之后，我们的 Spring Boot 项目就算顺利发布到远程 Docker 容器中了。")]),t._v(" "),s("p",[t._v("好玩吗？试试！")]),t._v(" "),s("p",[t._v("本文案例我已经上传到 GitHub，小伙伴们可以参考：https://github.com/lenve/javaboy-code-samples​")])])}),[],!1,null,null,null);a.default=r.exports}}]);