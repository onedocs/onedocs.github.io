(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{478:function(t,a,e){"use strict";e.r(a);var v=e(42),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Maven 中有一些常见的命令，如果使用  Eclipse 需要手动敲命令，如果使用 IDEA 的话，可以不用命令，直接点点点就可以了。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("常用命令")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("中文含义")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("mvn clean")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("清理")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("这个命令可以用来清理已经编译好的文件")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("mvn compile")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("编译")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("将 Java 代码编译成 Class 文件")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("mvn test")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目测试")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("mvn package")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("打包")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("根据用户的配置，将项目打成 jar 包或者 war 包")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("mvn install")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("安装")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("手动向本地仓库安装一个 jar")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("mvn deploy")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("上传")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("将 jar 上传到私服")])])])]),t._v(" "),e("p",[t._v("这里需要注意的是，这些命令都不是独立运行的，它有一个顺序。举个简单例子：")]),t._v(" "),e("p",[t._v("我想将 jar 上传到私服，那么就要构建 jar，就需要执行 package 命令，要打包，当然也需要测试，那就要走 mvn test 命令，要测试就要先编译.....，因此，最终所有的命令都会执行一遍。不过，开发者也可以手动配置不执行某一个命令，这就是跳过。一般来是，除了测试，其他步骤都不建议跳过。")]),t._v(" "),e("p",[t._v("当然，如果开发者使用了 IDEA ，这些命令不用手动敲，点一下就行：")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-1.png",alt:"",title:"4-1.png"}})]),t._v(" "),e("h2",{attrs:{id:"_4-1-通过命令来构建项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-通过命令来构建项目"}},[t._v("#")]),t._v(" 4.1 通过命令来构建项目")]),t._v(" "),e("p",[t._v("可以直接通过命令来构建一个 Maven 项目，不过在实际开发中，一般使用 Eclipse 或者 IDEA 就可以直接创建 Maven 项目了。")]),t._v(" "),e("p",[t._v("创建命令：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mvn archetype:generate -DgroupId=org.javaboy -DartifactId=firstapp -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n")])])]),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-2.png",alt:"",title:"4-2.png"}})]),t._v(" "),e("p",[t._v("看到如下提示，表示项目创建成功：")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-3.png",alt:"",title:"4-3.png"}})]),t._v(" "),e("p",[t._v("项目创建成功后，就两个文件：")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-4.png",alt:"",title:"4-4.png"}})]),t._v(" "),e("p",[t._v("说明对一个任何一个项目而言，最最核心的就是这两个。")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-5.png",alt:"",title:"4-5.png"}})]),t._v(" "),e("p",[t._v("pom.xml 中，则定义了所有的项目配置。")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-6.png",alt:"",title:"4-6.png"}})]),t._v(" "),e("h2",{attrs:{id:"_4-2-对项目进行打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-对项目进行打包"}},[t._v("#")]),t._v(" 4.2 对项目进行打包")]),t._v(" "),e("p",[t._v("接下来，我们通过 mvn package 命令可以将刚刚创建的项目打成一个 jar 包。")]),t._v(" "),e("p",[t._v("在打包之前，需要配置 JDK 的版本至少为 7 以上，因此，我们还需要手动修改一下 pom.xml 文件，即添加如下配置：")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-7.png",alt:"",title:"4-7.png"}})]),t._v(" "),e("p",[t._v("添加完成后，执行打包命令，注意执行所有命令时，命令行要定位到 pom.xml 文件所在的目录，看到如下提示，表示项目打包成功。")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-8.png",alt:"",title:"4-8.png"}})]),t._v(" "),e("h2",{attrs:{id:"_4-3-将项目安装到本地仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-将项目安装到本地仓库"}},[t._v("#")]),t._v(" 4.3 将项目安装到本地仓库")]),t._v(" "),e("p",[t._v("如果需要将项目安装到本地仓库，可以直接执行 mvn install 命令，注意，mvn install 命令会包含上面的 mvn package 过程。")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://maven.javaboy.org/assets/images/img/4-9.png",alt:"",title:"4-9.png"}})]),t._v(" "),e("p",[t._v("安装到本地仓库之后，这个时候，点开自己的本地仓库，就可以看到相关的 jar 了。")])])}),[],!1,null,null,null);a.default=s.exports}}]);