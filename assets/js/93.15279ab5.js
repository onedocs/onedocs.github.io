(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{538:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("我最早是 2016 年底开始写 Spring Boot 相关的博客，当时使用的版本还是 1.4.x ，文章发表在 CSDN 上，阅读量最大的一篇有 43W+，如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-1.png",alt:""}})]),t._v(" "),s("p",[t._v("2017 年由于种种原因，就没有再继续更新 Spring Boot 相关的博客了，2018年又去写书了，也没更新，现在 Spring Boot 最新稳定版是 2.1.8 ，松哥想针对此写一个系列教程，专门讲 Spring Boot2 中相关的知识点。这个系列，就从本篇开始吧。")]),t._v(" "),s("h2",{attrs:{id:"spring-boot-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-介绍"}},[t._v("#")]),t._v(" Spring Boot 介绍")]),t._v(" "),s("p",[t._v("我们刚开始学习 JavaWeb 的时候，使用 Servlet/JSP 做开发，一个接口搞一个 Servlet ，很头大，后来我们通过隐藏域或者反射等方式，可以减少 Servlet 的创建，但是依然不方便，再后来，我们引入 Struts2/SpringMVC 这一类的框架，来简化我们的开发 ，和 Servlet/JSP 相比，引入框架之后，生产力确实提高了不少，但是用久了，又发现了新的问题，即配置繁琐易出错，要做一个新项目，先搭建环境，环境搭建来搭建去，就是那几行配置，不同的项目，可能就是包不同，其他大部分的配置都是一样的，Java 总是被人诟病配置繁琐代码量巨大，这就是其中一个表现。那么怎么办？Spring Boot 应运而生，Spring Boot 主要提供了如下功能：")]),t._v(" "),s("ol",[s("li",[t._v("为所有基于 Spring 的 Java 开发提供方便快捷的入门体验。")]),t._v(" "),s("li",[t._v("开箱即用，有自己自定义的配置就是用自己的，没有就使用官方提供的默认的。")]),t._v(" "),s("li",[t._v("提供了一系列通用的非功能性的功能，例如嵌入式服务器、安全管理、健康检测等。")]),t._v(" "),s("li",[t._v("绝对没有代码生成，也不需要XML配置。")])]),t._v(" "),s("p",[t._v("Spring Boot 的出现让 Java 开发又回归简单，因为确确实实解决了开发中的痛点，因此这个技术得到了非常广泛的使用，松哥很多朋友出去面试 Java 工程师，从2017年年初开始，Spring Boot基本就是必问，现在流行的 Spring Cloud 微服务也是基于 Spring Boot，因此，所有的 Java 工程师都有必要掌握好 Spring Boot。")]),t._v(" "),s("h2",{attrs:{id:"系统要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统要求"}},[t._v("#")]),t._v(" 系统要求")]),t._v(" "),s("p",[t._v("截至本文写作（2019.09），Spring Boot 目前最新版本是 2.1.8，要求至少 JDK8，集成的 Spring 版本是 5.1.9 ，构建工具版本要求如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Build Tool")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Version")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Maven")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("3.3+")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Gradle")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4.4+")])])])]),t._v(" "),s("p",[t._v("内置的容器版本分别如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Name")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Version")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Tomcat 9.0")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4.0")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Jetty 9.4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("3.1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Undertow 2.0")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4.0")])])])]),t._v(" "),s("h2",{attrs:{id:"三种创建方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三种创建方式"}},[t._v("#")]),t._v(" 三种创建方式")]),t._v(" "),s("p",[t._v("初学者看到 Spring Boot 工程创建成功后有那么多文件就会有点懵圈，其实 Spring Boot 工程本质上就是一个 Maven 工程，从这个角度出发，松哥在这里向大家介绍三种项目创建方式。")]),t._v(" "),s("h3",{attrs:{id:"在线创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在线创建"}},[t._v("#")]),t._v(" 在线创建")]),t._v(" "),s("p",[t._v("这是官方提供的一个创建方式，实际上，如果我们使用开发工具去创建 Spring Boot 项目的话（即第二种方案），也是从这个网站上创建的，只不过这个过程开发工具帮助我们完成了，我们只需要在开发工具中进行简单的配置即可。")]),t._v(" "),s("p",[t._v("首先打开 "),s("code",[t._v("https://start.spring.io")]),t._v(" 这个网站，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-2.png",alt:""}})]),t._v(" "),s("p",[t._v("这里要配置的按顺序分别如下：")]),t._v(" "),s("ul",[s("li",[t._v("项目构建工具是 Maven 还是 Gradle ？松哥见到有人用 Gradle 做 Java 后端项目，但是整体感觉 Gradle 在 Java 后端中使用的还是比较少，Gradle 在 Android 中使用较多，Java 后端，目前来看还是 Maven 为主，因此这里选择第一项。")]),t._v(" "),s("li",[t._v("开发语言，这个当然是选择 Java 了。")]),t._v(" "),s("li",[t._v("Spring Boot 版本，可以看到，目前最新的稳定版是 2.1.8 ，这里我们就是用最新稳定版。")]),t._v(" "),s("li",[t._v("既然是 Maven 工程，当然要有项目坐标，项目描述等信息了，另外这里还让输入了包名，因为创建成功后会自动创建启动类。")]),t._v(" "),s("li",[t._v("Packing 表示项目要打包成 jar 包还是 war 包，Spring Boot 的一大优势就是内嵌了 Servlet 容器，打成 jar 包后可以直接运行，所以这里建议打包成 jar 包，当然，开发者根据实际情况也可以选择 war 包。")]),t._v(" "),s("li",[t._v("然后选选择构建的 JDK 版本。")]),t._v(" "),s("li",[t._v("最后是选择所需要的依赖，输入关键字如 web ，会有相关的提示，这里我就先加入 web 依赖。")])]),t._v(" "),s("p",[t._v("所有的事情全部完成后，点击最下面的 "),s("code",[t._v("Generate Project")]),t._v(" 按钮，或者点击 "),s("code",[t._v("Alt+Enter")]),t._v(" 按键，此时会自动下载项目，将下载下来的项目解压，然后用 IntelliJ IDEA 或者 Eclipse 打开即可进行开发。")]),t._v(" "),s("h3",{attrs:{id:"使用开发工具创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用开发工具创建"}},[t._v("#")]),t._v(" 使用开发工具创建")]),t._v(" "),s("p",[t._v("有人觉得上面的步骤太过于繁琐，那么也可以使用 IDE 来创建，松哥这里以 IntelliJ IDEA 和 STS 为例，需要注意的是，IntelliJ IDEA 只有 ultimate 版才有直接创建 Spring Boot 项目的功能，社区版是没有此项功能的。")]),t._v(" "),s("h4",{attrs:{id:"intellij-idea"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intellij-idea"}},[t._v("#")]),t._v(" IntelliJ IDEA")]),t._v(" "),s("p",[t._v("首先在创建项目时选择 Spring Initializr，如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-3.png",alt:""}})]),t._v(" "),s("p",[t._v("然后点击 Next ，填入 Maven 项目的基本信息，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-4.png",alt:""}})]),t._v(" "),s("p",[t._v("再接下来选择需要添加的依赖，如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-5.png",alt:""}})]),t._v(" "),s("p",[t._v("勾选完成后，点击 Next 完成项目的创建。")]),t._v(" "),s("h4",{attrs:{id:"sts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sts"}},[t._v("#")]),t._v(" STS")]),t._v(" "),s("p",[t._v("这里我再介绍下 Eclipse 派系的 STS 给大家参考， STS 创建 Spring Boot 项目，实际上也是从上一小节的那个网站上来的，步骤如下：")]),t._v(" "),s("p",[t._v("首先右键单击，选择 New -> Spring Starter Project ，如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-6.png",alt:""}})]),t._v(" "),s("p",[t._v("然后在打开的页面中填入项目的相关信息，如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-7.png",alt:""}})]),t._v(" "),s("p",[t._v("这里的信息和前面提到的都一样，不再赘述。最后一路点击 Next ，完成项目的创建。")]),t._v(" "),s("h3",{attrs:{id:"maven-创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maven-创建"}},[t._v("#")]),t._v(" Maven 创建")]),t._v(" "),s("p",[t._v("上面提到的几种方式，实际上都借助了 "),s("code",[t._v("https://start.spring.io/")]),t._v(" 这个网站，松哥记得在 2017 年的时候，这个网站还不是很稳定，经常发生项目创建失败的情况，从2018年开始，项目创建失败就很少遇到了，不过有一些读者偶尔还是会遇到这个问题，他们会在微信上问松哥这个问题腰怎么处理？我一般给的建议就是直接使用 Maven 来创建项目。步骤如下：")]),t._v(" "),s("p",[t._v("首先创建一个普通的 Maven 项目，以 IntelliJ IDEA 为例，创建步骤如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-8.png",alt:""}})]),t._v(" "),s("p",[t._v("注意这里不用选择项目骨架（如果大伙是做练习的话，也可以去尝试选择一下，这里大概有十来个 Spring Boot 相关的项目骨架），直接点击 Next ，下一步中填入一个 Maven 项目的基本信息，如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-9.png",alt:""}})]),t._v(" "),s("p",[t._v("然后点击 Next 完成项目的创建。")]),t._v(" "),s("p",[t._v("创建完成后，在 pom.xml 文件中，添加如下依赖：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-parent"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.1.8.RELEASE"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-web"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("添加成功后，再在 java 目录下创建包，包中创建一个名为 App 的启动类，如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableAutoConfiguration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("@EnableAutoConfiguration 注解表示开启自动化配置。")]),t._v(" "),s("p",[t._v("然后执行这里的 main 方法就可以启动一个 Spring Boot 工程了。")]),t._v(" "),s("h2",{attrs:{id:"项目结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目结构"}},[t._v("#")]),t._v(" 项目结构")]),t._v(" "),s("p",[t._v("使用工具创建出来的项目结构大致如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/boot2/2-10.png",alt:""}})]),t._v(" "),s("p",[t._v("对于我们来说，src 是最熟悉的， Java 代码和配置文件写在这里，test 目录用来做测试，pom.xml 是 Maven 的坐标文件，就这几个。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("本文主要向大家介绍了三种创建 Spring Boot 工程的方式，大家有更6的方法欢迎来讨论。")])])}),[],!1,null,null,null);a.default=e.exports}}]);