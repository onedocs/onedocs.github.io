(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{417:function(a,t,v){"use strict";v.r(t);var _=v(42),e=Object(_.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("p",[a._v("关于 MyCat 的铺垫文章已经写了三篇了：")]),a._v(" "),v("ol",[v("li",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/bcyjBgEqg6Or5zdi4jHaiA",target:"_blank",rel:"noopener noreferrer"}},[a._v("MySQL 只能做小项目？松哥要说几句公道话！"),v("OutboundLink")],1)]),a._v(" "),v("li",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/qUGANVj2mmoMwUZEV5Zc1w",target:"_blank",rel:"noopener noreferrer"}},[a._v("北冥有 Data，其名为鲲，鲲之大，一个 MySQL 放不下！"),v("OutboundLink")],1)]),a._v(" "),v("li",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/7pj5E2HvmiejBJrW0T86oQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("What？Tomcat 竟然也算中间件？"),v("OutboundLink")],1)])]),a._v(" "),v("p",[a._v("今天终于可以迎接我们的大 Boss 出场了！")]),a._v(" "),v("h2",{attrs:{id:"mycat-简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mycat-简介"}},[a._v("#")]),a._v(" MyCat 简介")]),a._v(" "),v("p",[a._v("前面文章我们提到，如果数据量比较大的话，我们需要对数据进行分库分表，分完之后，原本存在一个数据库中的数据，现在就存在多个数据库中了，就像下面这样：")]),a._v(" "),v("p",[v("img",{attrs:{src:"http://www.javaboy.org/images/mysql/6-2.png",alt:""}})]),a._v(" "),v("p",[a._v("那么此时 MyCat 所扮演的角色就是分布式数据库中间件！")]),a._v(" "),v("p",[a._v("MyCat 是一个开源的分布式数据库中间件，它实现了 MySQL 协议，在开发者眼里，他就是一个数据库代理，我们甚至可以使用 MySQL 的客户端工具以及命令行来访问 MyCat 。")]),a._v(" "),v("p",[a._v("MyCat 现在已经不仅仅只支持 MySQL 了，同时也支持 MSSQL、Oracle、DB2、以及 PostgreSQL等主流数据库。甚至像 MongoDB 这种 NoSQL 也支持。")]),a._v(" "),v("h2",{attrs:{id:"快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#快速入门"}},[a._v("#")]),a._v(" 快速入门")]),a._v(" "),v("h3",{attrs:{id:"搭建读写分离"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#搭建读写分离"}},[a._v("#")]),a._v(" 搭建读写分离")]),a._v(" "),v("p",[a._v("要搞 MyCat ，一般要先搭建好 MySQL 的读写分离，MySQL 的读写分离可以参考松哥之前的这篇文章：")]),a._v(" "),v("ol",[v("li",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/SC0OYM6yO_GxQh9DvSsnoQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("提高性能，MySQL 读写分离环境搭建(二)"),v("OutboundLink")],1)])]),a._v(" "),v("h3",{attrs:{id:"mycat-安装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mycat-安装"}},[a._v("#")]),a._v(" MyCat 安装")]),a._v(" "),v("p",[a._v("环境：")]),a._v(" "),v("ul",[v("li",[a._v("CentOS7")]),a._v(" "),v("li",[a._v("JDK1.8")])]),a._v(" "),v("p",[a._v("MyCat 使用 Java 开发，因此，运行 MyCat ，一定要具备 Java 环境，配置 Java 运行环境这个比较容易，网上资料也很多，我就不详细介绍了。")]),a._v(" "),v("p",[a._v("Java 环境安装好之后，首先下载 MyCat：")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("wget http://dl.mycat.io/1.6.7.1/Mycat-server-1.6.7.1-release-20190213150257-linux.tar.gz\n")])])]),v("p",[a._v("下载完成后，对下载文件进行解压。")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("tar -zxvf Mycat-server-1.6.7.1-release-20190213150257-linux.tar.gz\n")])])]),v("p",[a._v("解压成功后，会出现一个 "),v("code",[a._v("mycat")]),a._v(" 目录，进入到 "),v("code",[a._v("mycat/conf")]),a._v(" 目录，对 "),v("code",[a._v("mycat")]),a._v(" 进行配置：")]),a._v(" "),v("p",[a._v("首先来配置 "),v("code",[a._v("schema.xml")]),a._v(" 文件：")]),a._v(" "),v("p",[v("img",{attrs:{src:"http://www.javaboy.org/images/mysql/7-1.png",alt:""}})]),a._v(" "),v("ol",[v("li",[a._v("首先在 "),v("code",[a._v("schema")]),a._v(" 中指定逻辑库的名字，逻辑库是指 "),v("code",[a._v("MyCat")]),a._v(" 中的库，这个库不存储数据，数据存储在 "),v("code",[a._v("MySQL")]),a._v(" 中的物理库中。")]),a._v(" "),v("li",[a._v("逻辑库中配置逻辑表，配置逻辑表时，需要指定 "),v("code",[a._v("dataNode")]),a._v(" 节点， "),v("code",[a._v("dataNode")]),a._v(" 就是指数据库存储的位置")]),a._v(" "),v("li",[a._v("配置  "),v("code",[a._v("dataNode")]),a._v(" ，"),v("code",[a._v("dataNode")]),a._v(" 指定  "),v("code",[a._v("dataHost")]),a._v(" 和物理库的名字。")]),a._v(" "),v("li",[v("code",[a._v("dataHost")]),a._v(" 则配置 "),v("code",[a._v("MySQL")]),a._v(" 的主机和从机的位置，登录密码等。主机和从机都可以配置多个。")])]),a._v(" "),v("p",[a._v("配置完 schema.xml 后 ，接下来配置 server.xml。")]),a._v(" "),v("p",[a._v("server.xml  中主要配置 MyCat 的登录用户名和密码，以及需要操作的逻辑库。")]),a._v(" "),v("p",[v("img",{attrs:{src:"http://www.javaboy.org/images/mysql/7-2.png",alt:""}})]),a._v(" "),v("p",[a._v("配置完成后，接下来就可以启动 MyCat 了 。")]),a._v(" "),v("p",[a._v("执行 MyCat 解压目录下的 bin 目录下的 mycat 命令，可以启动 MyCat")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("./bin/mycat start\n")])])]),v("p",[a._v("如果启动后，提示无法创建 "),v("code",[a._v("mycat.pid")]),a._v(" 文件，就自己手动创建一个 "),v("code",[a._v("mycat.pid")]),a._v(" 文件。启动成功之后，就可以在本地连接 "),v("code",[a._v("MyCat")]),a._v(" 了，连接方式和 "),v("code",[a._v("MySQL")]),a._v(" 一样，唯一的区别在于端口号不同。")]),a._v(" "),v("p",[a._v("在连接  "),v("code",[a._v("MyCat")]),a._v(" 之前，先在 "),v("code",[a._v("MySQL")]),a._v(" 物理库中创建 "),v("code",[a._v("db1")]),a._v("、"),v("code",[a._v("db2")]),a._v(" 以及 "),v("code",[a._v("db3")]),a._v(" 三个数据库。")]),a._v(" "),v("p",[a._v("使用 "),v("code",[a._v("SQLyog")]),a._v(" 连接：")]),a._v(" "),v("p",[v("img",{attrs:{src:"http://www.javaboy.org/images/mysql/7-3.png",alt:""}})]),a._v(" "),v("p",[a._v("也可以在 "),v("code",[a._v("cmd")]),a._v(" 命令行登录 "),v("code",[a._v("MyCat")]),a._v(" ：")]),a._v(" "),v("p",[v("img",{attrs:{src:"http://www.javaboy.org/images/mysql/7-4.png",alt:""}})]),a._v(" "),v("p",[a._v("登录成功后 ，在 "),v("code",[a._v("MyCat")]),a._v("  的窗口中，执行如下命令，创建表：")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("create table t_user (id integer primary key,username varchar(255))\n")])])]),v("p",[a._v("执行成功后，我们会发现物理库中出现了相应的表。\n接下来，手动往各个物理库的物理表中存储一条数据，然后在  MyCat 窗口中查询：")]),a._v(" "),v("p",[v("img",{attrs:{src:"http://www.javaboy.org/images/mysql/7-5.png",alt:""}})]),a._v(" "),v("p",[a._v("这样就可以查询到 三个库中的三个表中的数据。")]),a._v(" "),v("h2",{attrs:{id:"问题分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#问题分析"}},[a._v("#")]),a._v(" 问题分析")]),a._v(" "),v("p",[a._v("整个过程不难，但是有的小伙伴在第一次配置的过程中还是容易出错，因此我这里还是来说两句，出错了要如何定位。")]),a._v(" "),v("p",[a._v("一般来说，配置 MyCat 出错，问题可能发生在两个阶段。第一个阶段就是客户端连接 MyCat 出错，第二个阶段就是 MyCat 连接 MySQL 出错。")]),a._v(" "),v("p",[a._v("无论你是使用 SQLyog 还是 Navicat ，我们在连接数据库的过程中，都可以先测试连接，很多人卡在这一步。")]),a._v(" "),v("p",[a._v("如果在测试连接的时候就连接不通，说明是 MyCat 的问题，这个时候检查步骤如下：")]),a._v(" "),v("ol",[v("li",[a._v("首先当然是查看日志信息，看能不能找出端倪")]),a._v(" "),v("li",[a._v("通过 jps 命令查看 mycat 是否成功启动")]),a._v(" "),v("li",[a._v("检查 server.xml 中配置是否正确，用户名密码是否输入正确")])]),a._v(" "),v("p",[a._v("这是第一种可能的问题，第二种问题就是测试连接没问题，但是测试完后，却连接不上。反映到 Navicat 上，就是测试连接没问题，测完之后，点击连接名要打开连接时，Navicat 就崩了，出现这个问题一般是 MyCat 在连接 MySQL 出问题了，这个时候就要去检查 schema.xml 文件中关于 MySQL 主机和从机的配置是否正确，数据库地址是否正确，用户名密码是否正确。")]),a._v(" "),v("h2",{attrs:{id:"结语"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[a._v("#")]),a._v(" 结语")]),a._v(" "),v("p",[a._v("好了，本文主要简单介绍了下 MyCat 的安装问题，下篇文章我们来看 MyCat 中的分片规则问题。")]),a._v(" "),v("p",[a._v("参考资料：")]),a._v(" "),v("ol",[v("li",[v("a",{attrs:{href:"http://www.mycat.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("MyCat 官方文档"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);