(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{392:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("这是一篇计划之外的文章，之所以有这篇文章，是因为有一个小伙伴在阅读"),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/9OZY7x9DSyRO7T56TyDJ8Q",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 分支管理"),s("OutboundLink")],1),t._v("一文时遇到了一个问题，而这个问题又比较典型，因此我想专门来谈谈 Git 中工作区的储藏问题。")]),t._v(" "),s("p",[t._v("本文是 Git 系列的第六篇，了解前面的文章有助于更好的理解本文：")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("1."),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/3RheAJ9LYKK5BnVr331h5A",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 概述"),s("OutboundLink")],1),s("br"),t._v("\n2."),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/S1T4wy3srmLvXgIjvpVEwg",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 基本操作"),s("OutboundLink")],1),s("br"),t._v("\n3."),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/WiLnRQfDVITHMYzGl9pAzQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 中的各种后悔药"),s("OutboundLink")],1),s("br"),t._v("\n4."),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/9OZY7x9DSyRO7T56TyDJ8Q",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 分支管理"),s("OutboundLink")],1),s("br"),t._v("\n5."),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/x5bRe4QBMoVFKv5jNl9iRw",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 关联远程仓库"),s("OutboundLink")],1)]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"问题回顾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题回顾"}},[t._v("#")]),t._v(" 问题回顾")]),t._v(" "),s("p",[t._v("小伙伴遇到的问题是这样的：")]),t._v(" "),s("p",[t._v("现在有一个 master 分支，master 分支中有一个文件叫 01.txt ，该文件中只有一行数据，然后对 01.txt 执行 add 和 commit ，然后再从 master 分支中创建出一个新的分支 fa ，切换到 fa 分支上，然后向 01.txt 中再添加一行数据，添加成功之后，不做任何事情，再切换回 master 分支，此时用 cat 命令查看 01.txt 文件，发现竟然有两行数据，按理说 master 中的 01.txt 只有一行数据，而 fa 中的 01.txt 有两行数据，整个过程如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/git/p256.gif",alt:"p256.gif"}})]),t._v(" "),s("p",[t._v("要搞清楚这个问题，得先明白下面这个问题：")]),t._v(" "),s("blockquote",[s("p",[t._v("cat 命令和 git 无关，就是用来查看文件的，我为了演示方便使用了 cat 命令，这和直接用记事本打开文件查看效果是一样的。")])]),t._v(" "),s("p",[t._v("可能眼尖的小伙伴已经发现端倪了，我们上面这个操作少了两个步骤，那就是 add/commit ，fa 分支中的数据修改之后直接切换回了 master ，而没有 add/commit 。"),s("strong",[t._v("正常情况下（修改数据后 add/commit），如果 master 和 fa 分支中的数据不一致，我们执行了 "),s("code",[t._v("git checkout -")]),t._v(" 进行分支的切换，这个时候工作区中的文件内容也是会跟着变化的（大家可以通过 cat 命令或者直接在记事本中打开工作区的文件来查看这种变化），但是如果我在 fa 分支中修改了文件却没有 add/commit 就切换回 master ，此时如果工作区的文件变化了，可能会导致我在 fa 分支中的修改丢失，因此，这个时候工作区的文件就没有变化，即工作区的文件内容还是 fa 分支中修改的内容。")])]),t._v(" "),s("p",[t._v("解决这个问题，我们有两种方案，请小伙伴们往下看。")]),t._v(" "),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),s("h3",{attrs:{id:"方案一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案一"}},[t._v("#")]),t._v(" 方案一")]),t._v(" "),s("p",[t._v("第一种解决方案就是在某一个分支修改文件之后，先 add 并且 commit 之后再去切换分支，这个操作就比较简单了，我这里就不再演示了。")]),t._v(" "),s("h3",{attrs:{id:"方案二-储藏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案二-储藏"}},[t._v("#")]),t._v(" 方案二(储藏)")]),t._v(" "),s("p",[t._v("第二种解决方案就是储藏 (Stashing)，储藏适用在如下场景中：")]),t._v(" "),s("blockquote",[s("p",[t._v("当我在一个分支 fa 中修改了文件，但是还没有完全改好，此时我并不想 add/commit ，但是这个时候有一个更急迫的事情在另外一个分支 fb 上需要我去做，我必须要切换分支。")])]),t._v(" "),s("p",[t._v("在这样一个场景中，如果我直接切换分支，会出现如下两个问题：")]),t._v(" "),s("p",[t._v("1.从 fa 切换到 fb 之后，工作区的代码还是 fa 的代码，不符合我的工作要求。"),s("br"),t._v("\n2.假设我不在乎问题 1，在 fb 中直接修改工作区的代码，等我在 fb 中修改完后提交后再回到 fa ，会发现我之前的代码丢失了。")]),t._v(" "),s("p",[t._v("为了解决这个问题，Git 给我们提供了储藏 (Stashing)。")]),t._v(" "),s("p",[t._v("现在假设一开始 master 和 fa 分支中的文件内容都是一致的，而且两个分支的工作区都是干净的，即没有东西需要 add/commit ，此时，我在 master 中修改了文件，修改完成之后，执行 "),s("code",[t._v("git status")]),t._v(" 命令我们看到 master 中有东西需要 add/commit ，此时我想切换到 fa 分支中去，但是并不想对 master 分支执行 add/commit ，这个时候我们可以执行如下命令，先将当前分支中的文件储藏起来：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git stash\n")])])]),s("p",[t._v("OK，执行完 "),s("code",[t._v("git stash")]),t._v(" 命令之后，再执行 "),s("code",[t._v("git status")]),t._v(" ，我们发现此时 master 分支已经是干净的了，此时我们可以愉快的切换到 fa 分支中去了，切换到 fa 分支之后，我们发现 master 中的修改并没有干扰到 fa 分支，当我们完成了 fa 分支中的工作之后，再回到 master 分支，此时执行如下命令可以恢复刚刚储藏的数据：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git stash apply\n")])])]),s("p",[t._v("上面这个命令执行完之后，master 分支中的工作区中的文件就恢复了，此时执行 "),s("code",[t._v("git status")]),t._v(" 就可以看到又有数据需要 add/commit 了。")]),t._v(" "),s("p",[t._v("我们也可将工作区储藏多次，这个时候我们可以执行如下命令来查看储藏：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git stash list\n")])])]),s("p",[t._v("执行效果如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://www.javaboy.org/images/git/p255.png",alt:"p255"}})]),t._v(" "),s("p",[s("code",[t._v("git stash apply")]),t._v(" 表示恢复最近一次储藏，如果我们想恢复到之前的某一次储藏，可以加上储藏的名字，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git stash apply stash@{1}\n")])])]),s("p",[t._v("还有一些其他的关于储藏的命令：")]),t._v(" "),s("h3",{attrs:{id:"_1-恢复储藏并出栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-恢复储藏并出栈"}},[t._v("#")]),t._v(" 1.恢复储藏并出栈")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git stash pop\n")])])]),s("p",[t._v("执行效果和 "),s("code",[t._v("git stash apply")]),t._v(" 一样，不同的是，这里执行完之后，会将栈顶的储藏移除。")]),t._v(" "),s("h3",{attrs:{id:"_2-删除某一个储藏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-删除某一个储藏"}},[t._v("#")]),t._v(" 2.删除某一个储藏")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git stash drop stash@{4}\n")])])]),s("p",[t._v("最后一个参数是指储藏的名字。")]),t._v(" "),s("p",[t._v("Ok，储藏问题我们先说这么多。有问题欢迎留言讨论。")]),t._v(" "),s("p",[t._v("参考资料：")]),t._v(" "),s("p",[t._v("1.《GitHub入门与实践》"),s("br"),t._v("\n2.《Pro Git》")])])}),[],!1,null,null,null);a.default=r.exports}}]);