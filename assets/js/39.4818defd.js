(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{526:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("上篇文章中我们介绍了 MongoDB 中索引的简单操作，创建、查看、删除等基本操作，不过上文我们只介绍了一种类型的索引，本文我们来看看其他类型的索引。")]),t._v(" "),s("h2",{attrs:{id:"id-索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#id-索引"}},[t._v("#")]),t._v(" _id 索引")]),t._v(" "),s("p",[t._v("我们在上文介绍过，我们往集合中添加文档时，默认情况下 MongoDB 都会帮助我们创建一个名为 "),s("code",[t._v("_id")]),t._v(" 的字段，这个字段就是一个索引。默认情况下，一般的集合都会帮我们创建这个字段作为索引，但也有一些集合不会将 "),s("code",[t._v("_id")]),t._v(" 默认作为索引，比如固定集合，这个我们后面的文章会详细说到这个问题。")]),t._v(" "),s("h2",{attrs:{id:"复合索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合索引"}},[t._v("#")]),t._v(" 复合索引")]),t._v(" "),s("p",[t._v("如果我们的查询条件有多个的话，我们可以对这多个查询条件都建立索引，比如我们可以对文档中的 x 和 y 字段都建立索引，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.ensureIndex({x:1,y:-1})\n")])])]),s("p",[t._v("此时执行如下查询语句时就会用到这个复合索引：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.find({x:1,y:999})\n")])])]),s("p",[t._v("小伙伴们也可以通过查看查询计划来确定确实使用到了上文创建好的索引。")]),t._v(" "),s("h2",{attrs:{id:"过期索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过期索引"}},[t._v("#")]),t._v(" 过期索引")]),t._v(" "),s("p",[t._v("顾名思义，过期索引就是一种会过期的索引，在索引过期之后，索引对应的数据会被删除，创建方式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.ensureIndex({time:1},{expireAfterSeconds:30})\n")])])]),s("p",[t._v("expireAfterSeconds 表示索引的过期时间，单位为秒。time 表示索引的字段，time 的数据类型必须是 ISODate 或者 ISODate 数组，否则的话，当索引过期之后，time 的数据就不会被删除。")]),t._v(" "),s("h2",{attrs:{id:"全文索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全文索引"}},[t._v("#")]),t._v(" 全文索引")]),t._v(" "),s("p",[t._v("全文索引虽然好用，可惜不支持中文，我们这里就先做一个简单的了解。")]),t._v(" "),s("p",[t._v("比如，我的数据集如下：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"59f5a3da1f9e8e181ffc3189"')]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"x"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java C# Python PHP"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"59f5a3da1f9e8e181ffc318a"')]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"x"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java C#"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"59f5a3da1f9e8e181ffc318b"')]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"x"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java Python"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"59f5a3da1f9e8e181ffc318c"')]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"x"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PHP Python"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"59f5a4541f9e8e181ffc318d"')]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"x"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C C++"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我们可以给 x 字段建立一个全文索引，创建方式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.ensureIndex({x:"text"})\n')])])]),s("p",[t._v("MongoDB 会自动对 x 字段的数据进行分词，然后我们就可以通过如下语句进行查询：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.find({$text:{$search:"Java"}})\n')])])]),s("p",[t._v("此时 x 中包含 Java 的文档都会被查询出来。如果想查询既包含 Java 又包含 C# 的文档，操作如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.find({$text:{$search:"\\"Java C#\\""}})\n')])])]),s("p",[t._v("用一对双引号将查询条件括起来，如果想查询包含 PHP 或者 Python 的文档，操作如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.find({$text:{$search:"PHP Python"}})\n')])])]),s("p",[t._v("如果想查询既有 PHP，又有 Python，但是又不包括 Java 的文档，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.find({$text:{$search:"PHP Python -Java"}})\n')])])]),s("p",[t._v("建立了全文索引之后，我们也可以查看查询结果的相似度，使用 $meta，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.find({$text:{$search:"PHP Python"}},{score:{$meta:"textScore"}})\n')])])]),s("p",[t._v("此时查询结果中会多出一个 score 字段，该字段的值越大，表示相似度越高，我们可以根据 score 利用 sort 来对其进行排序，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.find({$text:{$search:"PHP Python"}},{score:{$meta:"textScore"}}).sort({score:{$meta:"textScore"}})\n')])])]),s("p",[t._v("全文索引目前看起来功能还是很强大，可惜暂时不支持中文，不过网上对此也有很多解决方案，小伙伴们可以自行搜索查看。")]),t._v(" "),s("h2",{attrs:{id:"地理空间索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#地理空间索引"}},[t._v("#")]),t._v(" 地理空间索引")]),t._v(" "),s("h3",{attrs:{id:"地理空间索引类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#地理空间索引类型"}},[t._v("#")]),t._v(" 地理空间索引类型")]),t._v(" "),s("p",[t._v("地理空间索引可以分为两类：")]),t._v(" "),s("ol",[s("li",[t._v("2d 索引，可以用来存储和查找平面上的点。")]),t._v(" "),s("li",[t._v("2d sphere 索引，可以用来存储和查找球面上的点。")])]),t._v(" "),s("h4",{attrs:{id:"_2d索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2d索引"}},[t._v("#")]),t._v(" 2d索引")]),t._v(" "),s("p",[t._v("2d 索引一般我们可以用在游戏地图中。\n向集合中插入一条记录点的数据：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.insert({x:[90,0]})\n")])])]),s("p",[t._v("插入数据的格式为[经度,纬度]，取值范围，经度 [-180,180]，纬度 [-90,90]。数据插入成功之后，我们先通过如下命令创建索引：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.ensureIndex({x:"2d"})\n')])])]),s("p",[t._v("然后通过 $near 我们可以查询某一个点附近的点，如下:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.find({x:{$near:[90,0]}})\n")])])]),s("p",[t._v("默认情况下返回该点附近 100 个点，我们可以通过 $maxDistance 来设置返回的最远距离：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.find({x:{$near:[90,0],$maxDistance:99}})\n")])])]),s("p",[t._v("我们也可以通过 $geoWithin 查询某个形状内的点，比如查询矩形中的点：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.find({x:{$geoWithin:{$box:[[0,0],[91,1]]}}})\n")])])]),s("p",[t._v("两个坐标点用来确定矩形的位置。")]),t._v(" "),s("p",[t._v("查询圆中的点：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.find({x:{$geoWithin:{$center:[[0,0],90]}}})\n")])])]),s("p",[t._v("参数分别表示圆的圆心和半径。")]),t._v(" "),s("p",[t._v("查询多边形中的点：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("db.sang_collect.find({x:{$geoWithin:{$polygon:[[0,0],[100,0],[100,1],[0,1]]}}})\n")])])]),s("p",[t._v("这里可以填入任意多个点，表示多边形中的各个点。")]),t._v(" "),s("h4",{attrs:{id:"_2d-sphere索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2d-sphere索引"}},[t._v("#")]),t._v(" 2d sphere索引")]),t._v(" "),s("p",[t._v("2dsphere 适用于球面类型的地图，它的数据类型是 GeoJSON 格式的，我们可以在 http://geojson.org/ 地址上查看 GeoJSON 格式的样式，比如我们描述一个点， GeoJSON 如下：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"59f5e0571f9e8e181ffc3196"')]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shenzhen"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"location"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Point"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coordinates"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("描述线，GeoJSON 格式如下：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"59f5e0d01f9e8e181ffc3199"')]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shenzhen"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"location"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LineString"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coordinates"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("描述多边形，GeoJSON 格式如下：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"59f5e3f91f9e8e181ffc31d0"')]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beijing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"location"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Polygon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coordinates"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("还有其他的类型，具体小伙伴们可以参考 http://geojson.org/ 。有了数据之后，我们可以通过如下操作来创建地理空间索引了：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('db.sang_collect.ensureIndex({location:"2dsphere"})\n')])])]),s("p",[t._v("比如我想查询和深圳这个区域有交集的文档，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var shenzhen = db.sang_collect.findOne({name:"shenzhen"})\ndb.sang_collect.find({location:{$geoIntersects:{$geometry:shenzhen.location}}})\n')])])]),s("p",[t._v("这里的查询结果是和深圳这个区域有交集的都会查到(比如经过深圳的高速公路、铁路等)，我们也可以只查询深圳市内的区域(比如深圳市内所有的学校)，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var shenzhen = db.sang_collect.findOne({name:"shenzhen"})\ndb.sang_collect.find({location:{$within:{$geometry:shenzhen.location}}})\n')])])]),s("p",[t._v("也可以查询腾讯附近的其他位置，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var QQ = db.sang_collect.findOne({name:"QQ"})\ndb.sang_collect.find({location:{$near:{$geometry:QQ.location}}})\n')])])]),s("h3",{attrs:{id:"复合地理空间索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合地理空间索引"}},[t._v("#")]),t._v(" 复合地理空间索引")]),t._v(" "),s("p",[t._v("位置往往只是我们查询的一个条件，比如我要查询深圳市内所有的学校，那我得再增加一个查询条件，如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var shenzhen = db.sang_collect.findOne({name:"shenzhen"})\ndb.sang_collect.find({location:{$within:{$geometry:shenzhen.location}},name:"QQ"})\n')])])]),s("p",[t._v("其他的查询条件跟在后面就行了。")]),t._v(" "),s("p",[t._v("好了，MongoDB 中的索引问题我们就说到这里，小伙伴们有问题欢迎留言讨论。")]),t._v(" "),s("p",[t._v("参考资料：")]),t._v(" "),s("ol",[s("li",[t._v("《MongoDB权威指南第2版》")])])])}),[],!1,null,null,null);a.default=e.exports}}]);