(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{431:function(e,t,r){"use strict";r.r(t);var a=r(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("上篇文章和小伙伴们一起搭建了 redis 主从复制环境，但是还不完善，本文我想再和小伙伴们聊聊主从复制环境搭建的一些细节。")]),e._v(" "),r("p",[e._v("本文是 Redis 系列的第十一篇文章，了解前面的文章有助于更好的理解本文：")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("1."),r("a",{attrs:{href:"https://mp.weixin.qq.com/s/NCm3zNGIDVMnlykeOiaH7Q",target:"_blank",rel:"noopener noreferrer"}},[e._v("Linux 上安装 Redis"),r("OutboundLink")],1),r("br"),e._v("\n2."),r("a",{attrs:{href:"http://mp.weixin.qq.com/s/jNSN8YO4jZbyjKR5C4in_w",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 中的五种数据类型简介"),r("OutboundLink")],1),r("br"),e._v("\n3."),r("a",{attrs:{href:"https://mp.weixin.qq.com/s/Svvgwo_a92vNdCSazbzKRQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 字符串 (STRING) 介绍"),r("OutboundLink")],1),r("br"),e._v("\n4."),r("a",{attrs:{href:"http://mp.weixin.qq.com/s/OGUnTBmdErvZ8r_yoyg_rQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 字符串 (STRING) 中 BIT 相关命令"),r("OutboundLink")],1),r("br"),e._v("\n5."),r("a",{attrs:{href:"https://mp.weixin.qq.com/s/C07AJhRk8AvPeKxSUq8lGA",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 列表与集合"),r("OutboundLink")],1),r("br"),e._v("\n6."),r("a",{attrs:{href:"https://mp.weixin.qq.com/s/9KlDOJlY7ZEoLEGUyDNxRg",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 散列与有序集合"),r("OutboundLink")],1),r("br"),e._v("\n7."),r("a",{attrs:{href:"https://mp.weixin.qq.com/s/5z8IZsB_nEJXELis9e5JWQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 中的发布订阅和事务"),r("OutboundLink")],1),r("br"),e._v("\n8."),r("a",{attrs:{href:"https://mp.weixin.qq.com/s/nsFVwQUc_YB1QcxYo10o-g",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 快照持久化"),r("OutboundLink")],1),r("br"),e._v("\n9."),r("a",{attrs:{href:"https://mp.weixin.qq.com/s/CLEd7XuPmjHpqLmQaVvklQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 之 AOF 持久化"),r("OutboundLink")],1),r("br"),e._v("\n10."),r("a",{attrs:{href:"https://mp.weixin.qq.com/s/TxVsMhRXZiVPhruzh9bOAA",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 主从复制(一)"),r("OutboundLink")],1)]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("本文接上文，所用三个 redis 实例和上文一致，这里就不再赘述三个实例搭建方式。")]),e._v(" "),r("h2",{attrs:{id:"一场接力赛"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一场接力赛"}},[e._v("#")]),e._v(" 一场接力赛")]),e._v(" "),r("p",[e._v("在上篇文章中，我们搭建的主从复制模式是下面这样的：")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://www.javaboy.org/images/redis/p302.png",alt:""}})]),e._v(" "),r("p",[e._v("实际上，一主二仆的主从复制，我们可以搭建成下面这种结构：")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://www.javaboy.org/images/redis/p303.png",alt:""}})]),e._v(" "),r("p",[e._v("搭建方式很简单，在前文基础上，我们只需要修改 6381 的 master 即可，在 6381 实例上执行如下命令，让 6381 从 6380 实例上复制数据，如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("127.0.0.1:6381> SLAVEOF 127.0.0.1 6380\nOK\n")])])]),r("p",[e._v("此时，我们再看 6379 的 slave ，如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("127.0.0.1:6379> info replication\n## Replication\nrole:master\nconnected_slaves:1\nslave0:ip=127.0.0.1,port=6380,state=online,offset=0,lag=1\nmaster_replid:4a38bbfa37586c29139b4ca1e04e8a9c88793651\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:0\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:0\n")])])]),r("p",[e._v("只有一个 slave，就 6380 ，我们再看 6380 的信息，如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("127.0.0.1:6380> info replication\n## Replication\nrole:slave\nmaster_host:127.0.0.1\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:70\nslave_priority:100\nslave_read_only:1\nconnected_slaves:1\nslave0:ip=127.0.0.1,port=6381,state=online,offset=70,lag=0\nmaster_replid:4a38bbfa37586c29139b4ca1e04e8a9c88793651\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:70\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:70\n")])])]),r("p",[e._v("6380 此时的角色是一个从机，它的主机是 6379，但是 6380 自己也有一个从机，那就是 6381 .此时我们的主从结构如下图：")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://www.javaboy.org/images/redis/p304.png",alt:""}})]),e._v(" "),r("h2",{attrs:{id:"哨兵模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#哨兵模式"}},[e._v("#")]),e._v(" 哨兵模式")]),e._v(" "),r("p",[e._v("结合上篇文章，我们一共介绍了两种主从模式了，但是这两种，不管是哪一种，都会存在这样一个问题，那就是当主机宕机时，就会发生群龙无首的情况，如果在主机宕机时，能够从从机中选出一个来充当主机，那么就不用我们每次去手动重启主机了，这就涉及到一个新的话题，那就是哨兵模式。")]),e._v(" "),r("p",[e._v("所谓的哨兵模式，其实并不复杂，我们还是在我们前面的基础上来搭建哨兵模式。假设现在我的 master 是 6379 ，两个从机分别是 6380 和 6381 ，两个从机都是从 6379 上复制数据。先按照上文的步骤，我们配置好一主二仆，然后在 redis 目录下打开 sentinel.conf 文件，做如下配置：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("sentinel monitor mymaster 127.0.0.1 6379 1\n")])])]),r("p",[e._v("其中 mymaster 是给要监控的主机取的名字，随意取，后面是主机地址，最后面的 2 表示有多少个 sentinel 认为主机挂掉了，就进行切换（我这里只有一个，因此设置为1）。好了，配置完成后，输入如下命令启动哨兵：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("redis-sentinel sentinel.conf\n")])])]),r("p",[e._v("然后启动我们的一主二仆架构，启动成功后，关闭 master，观察哨兵窗口输出的日志，如下：")]),e._v(" "),r("p",[r("img",{attrs:{src:"http://www.javaboy.org/images/redis/p305.png",alt:""}})]),e._v(" "),r("p",[e._v("小伙伴们可以看到，6379 挂掉之后，redis 内部重新举行了选举，6380 重新上位。此时，如果 6379 重启，也不再是扛把子了，只能屈身做一个 slave 了。")]),e._v(" "),r("h2",{attrs:{id:"注意问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注意问题"}},[e._v("#")]),e._v(" 注意问题")]),e._v(" "),r("p",[e._v("由于所有的写操作都是先在 Master 上操作，然后同步更新到 Slave 上，所以从 Master 同步到 Slave 机器有一定的延迟，当系统很繁忙的时候，延迟问题会更加严重，Slave 机器数量的增加也会使这个问题更加严重。因此我们还需要集群来进一步提升 redis 性能，这个问题我们将在后面说到。")]),e._v(" "),r("p",[e._v("OK,redis 主从复制问题我们就介绍这么多，更多资料小伙伴们可以参考官方文档http://www.redis.net.cn/tutorial/3501.html。小伙伴在看官方文档时，有什么问题欢迎留言讨论。")])])}),[],!1,null,null,null);t.default=s.exports}}]);