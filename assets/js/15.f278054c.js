(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{382:function(v,a,t){"use strict";t.r(a);var _=t(42),e=Object(_.a)({},(function(){var v=this,a=v.$createElement,t=v._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("数据卷容器以及和大家聊过了，本文我们再来看看使用数据卷容器实现数据的备份与恢复，然后再来看看容器的连接操作。")]),v._v(" "),t("p",[v._v("利用数据卷容器可以实现实现数据的备份和恢复。")]),v._v(" "),t("h2",{attrs:{id:"数据备份与恢复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据备份与恢复"}},[v._v("#")]),v._v(" 数据备份与恢复")]),v._v(" "),t("h3",{attrs:{id:"备份"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#备份"}},[v._v("#")]),v._v(" 备份")]),v._v(" "),t("p",[v._v("数据的备份操作很容易，执行如下命令：")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("docker run --volumes-from mydata --name backupcontainer -v $(pwd):/backup/ ubuntu tar cvf /backup/backup.tar /usr/share/nginx/html/\n")])])]),t("p",[v._v("命令解释：")]),v._v(" "),t("ol",[t("li",[v._v("首先使用 "),t("code",[v._v("--volumes-from")]),v._v(" 连接待备份容器。")]),v._v(" "),t("li",[t("code",[v._v("-v")]),v._v(" 参数用来将当前目录挂载到容器的 "),t("code",[v._v("/backup")]),v._v(" 目录下。")]),v._v(" "),t("li",[v._v("接下来，将容器中 "),t("code",[v._v("/usr/share/nginx/html")]),v._v(" 目录下的内容备份到 "),t("code",[v._v("/backup")]),v._v(" 目录下的 "),t("code",[v._v("backup.tar")]),v._v(" 文件中，由于已经设置将当前目录映射到容器的 "),t("code",[v._v("/backup")]),v._v(" 目录，因为备份在容器 "),t("code",[v._v("/backup")]),v._v(" 目录下的压缩文件在当前目录下可以立马看到。")])]),v._v(" "),t("p",[v._v("执行结果如下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"http://www.javaboy.org/images/docker/19-1.png",alt:"19-1"}})]),v._v(" "),t("p",[v._v("备份完成后，在当前目录下就可以看到 "),t("code",[v._v("/backup")]),v._v(" 文件，打开压缩文件，发现就是 "),t("code",[v._v("/usr/share/nginx/html")]),v._v(" 目录及内容。")]),v._v(" "),t("h3",{attrs:{id:"恢复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#恢复"}},[v._v("#")]),v._v(" 恢复")]),v._v(" "),t("p",[v._v("数据的恢复则稍微麻烦一些，操作步骤如下：")]),v._v(" "),t("h4",{attrs:{id:"创建容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建容器"}},[v._v("#")]),v._v(" 创建容器")]),v._v(" "),t("p",[v._v("首先创建一个容器，这个容器就是要使用恢复的数据的容器，我这里创建一个 nginx 容器，如下：")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("docker run -itd -p 80:80 -v /usr/share/nginx/html/ --name nginx3 nginx\n")])])]),t("p",[v._v("创建一个名为 nginx3 的容器，并且挂载一个数据卷。")]),v._v(" "),t("h4",{attrs:{id:"恢复-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#恢复-2"}},[v._v("#")]),v._v(" 恢复")]),v._v(" "),t("p",[v._v("数据恢复需要一个临时容器，如下：")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("docker run --volumes-from nginx3 -v $(pwd):/backup nginx tar xvf /backup/backup.tar\n")])])]),t("p",[v._v("命令解释：")]),v._v(" "),t("ol",[t("li",[v._v("首先还是使用 "),t("code",[v._v("--volumes-from")]),v._v(" 参数连接上备份容器，即第一步创建出来的 "),t("code",[v._v("nginx3")]),v._v(" 。")]),v._v(" "),t("li",[v._v("然后将当前目录映射到容器的 "),t("code",[v._v("/backup")]),v._v(" 目录下。")]),v._v(" "),t("li",[v._v("然后执行解压操作，将 "),t("code",[v._v("backup.tar")]),v._v(" 文件解压。解压文件位置描述是一个容器内的地址，但是该地址已经映射到宿主机中的当前目录了，因此这里要解压缩的文件实际上就是宿主机当前目录下的文件。")])]),v._v(" "),t("h2",{attrs:{id:"容器连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器连接"}},[v._v("#")]),v._v(" 容器连接")]),v._v(" "),t("p",[v._v("一般来说，容器启动后，我们都是通过端口映射来使用容器提供的服务，实际上，端口映射只是使用容器服务的一种方式，除了这种方式外，还可以使用容器连接的方式来使用容器服务。")]),v._v(" "),t("p",[v._v("例如，有两个容器，一个容器运行一个 "),t("code",[v._v("SpringBoot")]),v._v(" 项目，另一个容器运行着 "),t("code",[v._v("mysql")]),v._v(" 数据库，可以通过容器连接使 "),t("code",[v._v("SpringBoot")]),v._v(" 直接访问到 "),t("code",[v._v("Mysql")]),v._v(" 数据库，而不必通过端口映射来访问 "),t("code",[v._v("mysql")]),v._v(" 服务。")]),v._v(" "),t("p",[v._v("为了案例简单，我这里举另外一个例子：")]),v._v(" "),t("blockquote",[t("p",[v._v("有两个容器，一个 "),t("code",[v._v("nginx")]),v._v(" 容器，另一个 "),t("code",[v._v("ubuntu")]),v._v(" ，我启动 "),t("code",[v._v("nginx")]),v._v(" 容器，但是并不分配端口映射，然后再启动 "),t("code",[v._v("ubuntu")]),v._v(" ，通过容器连接，在 "),t("code",[v._v("ubuntu")]),v._v(" 中访问 "),t("code",[v._v("nginx")]),v._v(" 。")])]),v._v(" "),t("p",[v._v("具体操作步骤如下：")]),v._v(" "),t("ul",[t("li",[v._v("首先启动一个 nginx 容器，但是不分配端口，命令如下：")])]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("docker run -d --name nginx1 nginx\n")])])]),t("p",[v._v("命令执行结果如下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"http://www.javaboy.org/images/docker/20-1.png",alt:"20-1"}})]),v._v(" "),t("p",[v._v("容器启动成功后，在宿主机中是无法访问的。")]),v._v(" "),t("ul",[t("li",[v._v("启动ubuntu")])]),v._v(" "),t("p",[v._v("接下来，启动一个 ubuntu ，并且和 nginx 建立连接，如下：")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("docker run -dit --name ubuntu --link nginx1:mylink ubuntu bash\n")])])]),t("p",[v._v("这里使用 --link 建立连接，nginx1 是要建立连接的容器，后面的 mylink 则是连接的别名。")]),v._v(" "),t("p",[v._v("运行成功后，进入到 ubuntu 命令行：")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("docker exec -it ubuntu bash\n")])])]),t("p",[v._v("然后，有两种方式查看 nginx 的信息：")]),v._v(" "),t("p",[t("strong",[v._v("第一种")])]),v._v(" "),t("p",[v._v("在 ubuntu 控制台直接输入 env ，查看环境变量信息：")]),v._v(" "),t("p",[t("img",{attrs:{src:"http://www.javaboy.org/images/docker/20-2.png",alt:"20-2"}})]),v._v(" "),t("p",[v._v("可以看到 docker 为 nginx 创建了一系列环境变量。每个前缀变量是 MYLINK ，这就是刚刚给连接取得别名。开发者可以使用这些环境变量来配置应用程序连接到 nginx 。该连接是安全、私有的。 访问结果如下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"http://www.javaboy.org/images/docker/20-3.png",alt:"20-3"}})]),v._v(" "),t("p",[t("strong",[v._v("第二种")])]),v._v(" "),t("p",[v._v("另一种方式则是查看 ubuntu 的 hosts 文件，如下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"http://www.javaboy.org/images/docker/20-4.png",alt:"20-4"}})]),v._v(" "),t("p",[v._v("可以看到，在 ubuntu 的 hosts 文件中已经给 nginx1 取了几个别名，可以直接使用这些别名来访问 nginx1 。")]),v._v(" "),t("p",[v._v("小贴士：")]),v._v(" "),t("blockquote",[t("p",[v._v("默认情况下，ubuntu 容器中没有安装 curl 命令，需要手动安装下，安装命令如下："),t("br"),v._v("\napt-get update"),t("br"),v._v("\napt-get install curl")])]),v._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),t("p",[v._v("本文主要向大家介绍了 Docker 容器中的数据备份与恢复操作，同时也向大家介绍了容器连接相关的操作，不知道你学会了吗？")]),v._v(" "),t("p",[v._v("参考资料：")]),v._v(" "),t("p",[v._v("[1] 曾金龙，肖新华，刘清.Docker开发实践[M].北京：人民邮电出版社，2015.")])])}),[],!1,null,null,null);a.default=e.exports}}]);